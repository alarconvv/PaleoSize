logClade1_FC_c1 = logClade1_FC_RMSE.testc1,
poly2_FC_c1 = poly2_FC_RMSE.testc1,
poly2Clade1_FC_c1 = poly2Clade1_FC_RMSE.testc1,
poly3_FC_c1 = poly3_FC_RMSE.testc1,
poly3Clade1_FC_c1 = poly3Clade1_FC_RMSE.testc1,
lmClade2_FC_c1 = lmClade2_FC_RMSE.testc1,
logClade2_FC_c1 = logClade2_FC_RMSE.testc1,
poly2Clade2_FC_c1 = poly2Clade2_FC_RMSE.testc1,
poly3Clade2_FC_c1 =  poly3Clade2_FC_RMSE.testc1)
RMSE_c1 <- rbind(RMSE.train_c1, RMSE.test_c1)
#MSE
RMSE.long_c1 <- RMSE_c1 %>% pivot_longer(-type, names_to = 'model', values_to = 'MSE')
#################################################### Cross Validation ##############################################
###########
# Preliminar Analysis: Case 2: Split Cross validation k fold
###########
avesFCFL.cv <- avesFCFL
###########
# Fit models in training data
###########
train.control <- trainControl(method = "repeatedcv",
number = 10, repeats = 20)
# Fit lineal model
lm_FC_c2 <- train(FemurCirc ~ FemurLen, data = avesFCFL.cv,method = "lm",
trControl = train.control)
# Fit loglog model
loglog_FC_c2 <- train(log(FemurCirc) ~ log(FemurLen), data = avesFCFL.cv, method = "lm",
trControl = train.control)
# Multiple linear regression Clade 1
lmClade1_FC_c2 <- train(FemurCirc ~ FemurLen + Clade.1, data = avesFCFL.cv, method = "lm",
trControl = train.control)
# Multiple loglog linear regression Clade 1
logClade1_FC_c2 <- train(log(FemurCirc) ~ log(FemurLen) + Clade.1, data = avesFCFL.cv, method = "lm",
trControl = train.control)
# Multiple linear regression Clade 2
lmClade2_FC_c2 <- train(FemurCirc ~ FemurLen + Clade.2, data = avesFCFL.cv, method = "lm",
trControl = train.control)
# Multiple loglog linear regression Clade 2
logClade2_FC_c2 <- train(log(FemurCirc) ~ log(FemurLen) + Clade.2, data = avesFCFL.cv, method = "lm",
trControl = train.control)
# Poly model
poly2_FC_c2 <- train(FemurCirc ~ poly(FemurLen,2), data = avesFCFL.cv, method = "lm",
trControl = train.control)
# Multiple Poly model Clade 1
poly2Clade1_FC_c2 <- train(FemurCirc ~ poly(FemurLen,2) + Clade.1 , data = avesFCFL.cv, method = "lm",
trControl = train.control)
# Multiple Poly model Clade 2
poly2Clade2_FC_c2 <- train(FemurCirc ~ poly(FemurLen,2) + Clade.2, data = avesFCFL.cv, method = "lm",
trControl = train.control)
# Poly 3model
poly3_FC_c2 <- train(FemurCirc ~ poly(FemurLen,3), data = avesFCFL.cv, method = "lm",
trControl = train.control)
# Multiple Poly3 model Clade 1
poly3Clade1_FC_c2 <- train(FemurCirc ~ poly(FemurLen,3) + Clade.1 , data = avesFCFL.cv, method = "lm",
trControl = train.control)
# Multiple Poly3 model Clade 2
poly3Clade2_FC_c2 <- train(FemurCirc ~ poly(FemurLen,3) + Clade.2, data = avesFCFL.cv, method = "lm",
trControl = train.control)
fitvals_FC.cv_c2 <- data.frame(type = "cv",
FC_FL = lm_FC_c2$results$RMSE,
logFC_logFL = exp(loglog_FC_c2$results$RMSE),
FC_FL.Clade1 = lmClade1_FC_c2$results$RMSE,
logFC_logFL.Clade1 = exp(logClade1_FC_c2$results$RMSE),
FC_FL.Cl2 = lmClade2_FC_c2$results$RMSE,
logFC_logFL.Clade2 = exp(logClade2_FC_c2$results$RMSE),
FC_poly2FL = poly2_FC_c2$results$RMSE,
FC_poly2FL.Clade1 = poly2Clade1_FC_c2$results$RMSE,
FC_poly2FL.Clade2 = poly2Clade2_FC_c2$results$RMSE,
FC_poly3FL = poly3_FC_c2$results$RMSE,
FC_poly3FL.Clade1 = poly3Clade1_FC_c2$results$RMSE,
FC_poly3FL.Clade2 = poly3Clade2_FC_c2$results$RMSE)
fitvals_FC.long_c2 <- fitvals_FC.cv_c2 %>% pivot_longer(-type, names_to = 'model', values_to = 'RMSE')
#| tbl-cap-location: margin
#| message: false
#| warning: false
#| echo: false
#| label: tbl-cap-marging-tab4
#| tbl-cap: "MPG vs horsepower, colored by transmission."
AICs <- dplyr::tibble(cbind(Models = c("FC_FL",
"logFC_logFL",
"FC_FL.Clade1",
"logFC_logFL.Clade1",
"FC_poly2FL",
"FC_poly2FL.Clade1",
"FC_poly3FL",
"FC_poly3FL.Clade1",
"FC_FL.Clade2",
"logFC_logFL.Clade2",
"FC_poly2FL.Clade2",
"FC_poly3FL.Clade2"),
AIC(lm_FC_c1,
loglog_FC_c1,
lmClade1_FC_c1,
logClade1_FC_c1,
poly2_FC_c1,
poly2Clade1_FC_c1,
poly3_FC_c1,
poly3Clade1_FC_c1,
lmClade2_FC_c1,
logClade2_FC_c1,
poly2Clade2_FC_c1,
poly3Clade2_FC_c1 ),
adjR2 =c(
summary(lm_FC_c1)$r.squared,
summary(loglog_FC_c1)$r.squared,
summary(lmClade1_FC_c1)$r.squared,
summary(logClade1_FC_c1)$r.squared,
summary(poly2_FC_c1)$r.squared,
summary(poly2Clade1_FC_c1)$r.squared,
summary(poly3_FC_c1)$r.squared,
summary(poly3Clade1_FC_c1)$r.squared,
summary(lmClade2_FC_c1)$r.squared,
summary(logClade2_FC_c1)$r.squared,
summary(poly2Clade2_FC_c1)$r.squared,
summary(poly3Clade2_FC_c1 )$r.squared ))) |> gt::gt() |>
gt::tab_options(table.width =  "100%",
column_labels.background.color = "grey90",
table.font.size = 10) |>
gtExtras::gt_highlight_rows( rows = 10,
fill = "red",
bold_target_only = TRUE,
target_col = 1:4)
# #|>
# tab_caption(caption = md("**Table 4** "))
AICs
#| message: false
#| warning: false
#| echo: false
#| label: fig-cap-margin-plot2
#| fig-cap: "MPG vs horsepower, colored by transmission."
#| cap-location: margin
Models_c1 <- ggplot(data = fitvals_FC.long_c1) +
geom_line(aes(x = FemurLen, y = FemurCirc, color = model)) +
geom_point(data = avesFCFL.train, aes(x=FemurLen, y=FemurCirc), size = 1, alpha = 1, color = 'darkgrey')+
theme(legend.text = element_text(size = 7),legend.direction = "vertical",legend.position ="bottom")+
theme(axis.title = element_text(size = 10))+
labs(y = "Femur Circumference (mm)", x = "Femur Lenght (mm)")+
guides(col = guide_legend(nrow = 8))
# Extract the legend. Returns a gtable
legModels_c1 <- get_legend(Models_c1)
# RMSE case 1
RMSE.longc1 <-ggplot(data = RMSE.long_c1, aes(x = model, y = MSE)) +
geom_line(aes(group = type, color = type) )+
geom_point(aes(color = model), size= 1)+
scale_x_discrete(guide = guide_axis(angle = 45))+
geom_segment(aes(x = 5, y = 100, xend = 5, yend = 20), color= "darkred",
arrow = arrow(length = unit(0.5, "cm")))+
theme(axis.title = element_text(size = 10), legend.position="none")+
labs(y = "MSE", x = "Models")
# RMSE case 1
RMSE.longc2 <-ggplot(data = fitvals_FC.long_c2 , aes(x = model, y = RMSE)) +
geom_line(aes(group = type, color = type) )+
geom_point(aes(color = model), size= 1)+
scale_x_discrete(guide = guide_axis(angle = 45))+
geom_segment(aes(x = 12, y = 10, xend = 12, yend = 2), color= "darkred",
arrow = arrow(length = unit(0.5, "cm")))+
theme(axis.title = element_text(size = 10), legend.position="none")+
labs(y = "RMSE", x = "Models")
ggarrange( Models_c1+theme(legend.position="none") , as_ggplot(legModels_c1), RMSE.longc1, RMSE.longc2,
labels = c("A","", "B", "C"),
ncol = 2, nrow = 2)
#| tbl-cap-location: margin
#| message: false
#| warning: false
#| echo: false
#| label: tbl-cap-marging-tab4
#| tbl-cap: "MPG vs horsepower, colored by transmission."
AICs <- dplyr::tibble(cbind(Models = c("FC_FL",
"logFC_logFL",
"FC_FL.Clade1",
"logFC_logFL.Clade1",
"FC_poly2FL",
"FC_poly2FL.Clade1",
"FC_poly3FL",
"FC_poly3FL.Clade1",
"FC_FL.Clade2",
"logFC_logFL.Clade2",
"FC_poly2FL.Clade2",
"FC_poly3FL.Clade2"),
AIC(lm_FC_c1,
loglog_FC_c1,
lmClade1_FC_c1,
logClade1_FC_c1,
poly2_FC_c1,
poly2Clade1_FC_c1,
poly3_FC_c1,
poly3Clade1_FC_c1,
lmClade2_FC_c1,
logClade2_FC_c1,
poly2Clade2_FC_c1,
poly3Clade2_FC_c1 ),
adjR2 =c(
summary(lm_FC_c1)$r.squared,
summary(loglog_FC_c1)$r.squared,
summary(lmClade1_FC_c1)$r.squared,
summary(logClade1_FC_c1)$r.squared,
summary(poly2_FC_c1)$r.squared,
summary(poly2Clade1_FC_c1)$r.squared,
summary(poly3_FC_c1)$r.squared,
summary(poly3Clade1_FC_c1)$r.squared,
summary(lmClade2_FC_c1)$r.squared,
summary(logClade2_FC_c1)$r.squared,
summary(poly2Clade2_FC_c1)$r.squared,
summary(poly3Clade2_FC_c1 )$r.squared ))) |> gt::gt() |>
gt::tab_options(table.width =  "100%",
column_labels.background.color = "grey90",
table.font.size = 10) |>
gtExtras::gt_highlight_rows( rows = 10,
fill = "red",
bold_target_only = TRUE,
target_col = 1:4)
# #|>
# tab_caption(caption = md("**Table 4** "))
AICs
summary(logClade2_FC_c1)
logClade2_FC_c1
#| tbl-cap-location: margin
#| message: false
#| warning: false
#| echo: false
#| label: tbl-cap-marging-tab4
#| tbl-cap: "MPG vs horsepower, colored by transmission."
AICs <- dplyr::tibble(cbind(Models = c("FC_FL",
"logFC_logFL",
"FC_FL.Clade1",
"logFC_logFL.Clade1",
"FC_poly2FL",
"FC_poly2FL.Clade1",
"FC_poly3FL",
"FC_poly3FL.Clade1",
"FC_FL.Clade2",
"logFC_logFL.Clade2",
"FC_poly2FL.Clade2",
"FC_poly3FL.Clade2"),
AIC(lm_FC_c1,
loglog_FC_c1,
lmClade1_FC_c1,
logClade1_FC_c1,
poly2_FC_c1,
poly2Clade1_FC_c1,
poly3_FC_c1,
poly3Clade1_FC_c1,
lmClade2_FC_c1,
logClade2_FC_c1,
poly2Clade2_FC_c1,
poly3Clade2_FC_c1 ),
adjR2 =c(
summary(lm_FC_c1)$r.squared,
summary(loglog_FC_c1)$r.squared,
summary(lmClade1_FC_c1)$r.squared,
summary(logClade1_FC_c1)$r.squared,
summary(poly2_FC_c1)$r.squared,
summary(poly2Clade1_FC_c1)$r.squared,
summary(poly3_FC_c1)$r.squared,
summary(poly3Clade1_FC_c1)$r.squared,
summary(lmClade2_FC_c1)$r.squared,
summary(logClade2_FC_c1)$r.squared,
summary(poly2Clade2_FC_c1)$r.squared,
summary(poly3Clade2_FC_c1 )$r.squared ))) |> gt::gt() |>
gt::tab_options(table.width =  "100%",
column_labels.background.color = "grey90",
table.font.size = 10) |>
gtExtras::gt_highlight_rows( rows = 10,
fill = "red",
bold_target_only = TRUE,
target_col = 1:4)
# #|>
# tab_caption(caption = md("**Table 4** "))
AICs
#| tbl-cap-location: margin
#| message: false
#| warning: false
#| echo: false
#| label: tbl-cap-marging-tab5
#| tbl-cap: "MPG vs horsepower, colored by transmission."
table5 <- newAves |> summarise(orders = length(unique(Clade.2)), Species = length(unique(Taxon)), Obs = length(Clade.1))
gt(table5) |> tab_options(table.width =  "100%")|>
tab_options(column_labels.background.color = "grey90")
##|>
## tab_caption(caption = md("**Table 5** ummary of dataset for predicting femur circumference in ##Palaeognathae"))
length(newAves$Clade.1 == "Palaeognatahe")
ratio <- length(newAves$Clade.1 == "Palaeognatahe")/length(newAves$Clade.1 == "Neognatahe")
ratio
newAves$Clade.1 == "Palaeognathae"
length(newAves$Clade.1 == "Palaeognathae")
ratio <- length(which(newAves$Clade.1 == "Palaeognathae"))/length(which(newAves$Clade.1 == "Neognathae"))
ratio
#| message: false
#| warning: false
#| echo: false
#| label: fig-cap-margin-plot3
#| fig-cap: "MPG vs horsepower, colored by transmission."
#| cap-location: margin
ratio <- length(which(newAves$Clade.1 == "Palaeognathae"))/length(which(newAves$Clade.1 == "Neognathae"))
# Femur Circumference distribution
BMHist <- ggplot(newAves) +
geom_histogram(aes( x=BM.g, fill= Clade.1)) +
theme(axis.title = element_text(size = 10), legend.position="none")+
labs(y = "Count", x = "Body mass (g)")
# Femur Length distribution
FcHist <- ggplot(newAves) +
geom_histogram(aes( x=FemurCirc, fill= Clade.1)) +
theme(axis.title = element_text(size = 10), legend.position="none")+
labs(y = "Count", x = "Femur Circumference (mm)")
# Plot FC ~ FL
BMFc <- ggplot(newAves, aes(x=FemurCirc, y=BM.g)) +
geom_point(aes(color= Clade.1))+
theme(legend.text = element_text(size = 7),legend.direction = 'vertical',legend.position ="bottom")+
theme(axis.title = element_text(size = 10))+
labs(y = "Body mass (g)", x = "Femur Circunference (mm)")
# Extract the legend. Returns a gtable
leg <- get_legend(BMFc)
ggarrange(BMHist, FcHist, BMFc+theme(legend.position="none") , as_ggplot(leg),
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
#| message: false
#| warning: false
#| echo: false
#| #| label: fig-cap-margin-plot4
#| fig-cap: "Fit and performance of models to predict Body mass. A) Relationship Body mass and femur circumference, and how different models fit to the real data. B) Mean standard error for the first cases (train/test subsets). C) Root mean standard error to evaluate performance model in LOOC cross validation"
#| cap-location: margin
Models_c1 <- ggplot(data = fitvals_BM.long_c1) +
geom_line(aes(x = FemurCirc, y = BM.g, color = model)) +
geom_point(data = avesBMFC.cv, aes(x = FemurCirc, y = BM.g), size = 1, alpha = 1, color = 'darkgrey')+
theme(legend.text = element_text(size = 7),legend.direction = "vertical",legend.position ="bottom")+
theme(axis.title = element_text(size = 10))+
labs(y = "Body mass (g)", x = "Femur Circumference (mm)")+
guides(col = guide_legend(nrow = 8))
# Extract the legend. Returns a gtable
legModels_c1 <- get_legend(Models_c1)
# RMSE case 1
RMSE.longc1 <-ggplot(data = MSE.long_BM_c1, aes(x = model, y = MSE)) +
geom_line(aes(group = type, color = type) )+
geom_point(aes(color = model), size= 1)+
scale_x_discrete(guide = guide_axis(angle = 45))+
geom_segment(aes(x = 7, y = 200000000, xend = 7, yend = 20), color= "darkred",
arrow = arrow(length = unit(0.5, "cm")))+
theme(axis.title = element_text(size = 10), legend.position="none")+
labs(y = "MSE", x = "Models")
# RMSE case 1
RMSE.longc2 <-ggplot(data = fitvals_BM.long_c2 , aes(x = model, y = RMSE)) +
geom_line(aes(group = type, color = type) )+
geom_point(aes(color = model), size= 1)+
scale_x_discrete(guide = guide_axis(angle = 45))+
geom_segment(aes(x = 7, y = 2000, xend = 7, yend = 2), color= "darkred",
arrow = arrow(length = unit(0.5, "cm")))+
theme(axis.title = element_text(size = 10), legend.position="none")+
labs(y = "RMSE", x = "Models")
ggarrange( Models_c1+theme(legend.position="none") , as_ggplot(legModels_c1), RMSE.longc1, RMSE.longc2,
labels = c("A","", "B", "C"),
ncol = 2, nrow = 2)
#| tbl-cap-location: margin
#| message: false
#| warning: false
#| echo: false
#| label: tbl-cap-marging-tab6
#| tbl-cap: "Model selection by AIC criterion."
AICs <- dplyr::tibble(as.data.frame(cbind(Models = c("BM_FC",
"logBM_logFC",
"BM_poly2FC",
"BM_poly3FC",
"BM_spline1",
"BM_spline2",
"BM_spline3"),
DF = c(3,3,4,5,9,10,10),
AIC=c( AIC(lm_BM_c1,
loglog_BM_c1,
poly2_BM_c1,
poly3_BM_c1)$AIC,
ss.AIC1$aic[1],
ss.AIC2$aic[1],
ss.AIC3$aic[1]),
adjR2 =c(
summary(lm_BM_c1)$r.squared,
summary(loglog_BM_c1)$r.squared,
summary(poly2_BM_c1)$r.squared,
summary(poly3_BM_c1)$r.squared,
summary(Spline_BM1_c2)$r.squared,
summary(Spline_BM2_c2)$r.squared,
summary(Spline_BM3_c2)$r.squared
)))) |> gt::gt() |>
gt::tab_options(table.width =  "100%",
column_labels.background.color = "grey90",
table.font.size = 10) |>
gtExtras::gt_highlight_rows( rows = 2,
fill = "red",
bold_target_only = TRUE,
target_col = 1:4)
##|>
## tab_caption(caption = md("**Table 6** "))
AICs
#| tbl-cap-location: margin
#| message: false
#| warning: false
#| echo: false
#| label: tbl-cap-marging-tab6
#| tbl-cap: "Model selection by AIC criterion."
AICs <- dplyr::tibble(as.data.frame(cbind(Models = c("BM_FC",
"logBM_logFC",
"BM_poly2FC",
"BM_poly3FC",
"BM_spline1",
"BM_spline2",
"BM_spline3"),
DF = c(3,3,4,5,9,10,10),
AIC=c( AIC(lm_BM_c1,
loglog_BM_c1,
poly2_BM_c1,
poly3_BM_c1)$AIC,
ss.AIC1$aic[1],
ss.AIC2$aic[1],
ss.AIC3$aic[1]),
adjR2 =c(
summary(lm_BM_c1)$r.squared,
summary(loglog_BM_c1)$r.squared,
summary(poly2_BM_c1)$r.squared,
summary(poly3_BM_c1)$r.squared,
summary(Spline_BM1_c2)$r.squared,
summary(Spline_BM2_c2)$r.squared,
summary(Spline_BM3_c2)$r.squared
)))) |> gt::gt() |>
gt::tab_options(table.width =  "100%",
column_labels.background.color = "grey90",
table.font.size = 10) |>
gtExtras::gt_highlight_rows( rows = 2,
fill = "red",
bold_target_only = TRUE,
target_col = 1:4)
##|>
## tab_caption(caption = md("**Table 6** "))
AICs
#| message: false
#| warning: false
#| echo: false
# Theropoda
Dinos <- read_csv('Biol607_files/data/Estimated.csv')
Andersonetal1985 <-   0.16 * Dinos$FemurCirc^2.37699
CampbellMarcus1992 <- 10^(-0.065 + 2.411*log10(Dinos$FemurCirc))
CampioneEtal2014 <- 10^(-0.683 + 2.754*log10(Dinos$FemurCirc))
FieldEtal2013 <- exp(-0.11 + 2.4*log(Dinos$FemurCirc))
RomeroAlarcon2023 <-  exp(-0.09121 + 2.37699*log(Dinos$FemurCirc))
modelsPredict1 <- as.data.frame(cbind(trueBM.g = Dinos$BM.g, FemurCirc = Dinos$FemurCirc, CampbellMarcus1992, FieldEtal2013, CampioneEtal2014, RomeroAlarcon2023, Andersonetal1985))
modelsPredict.BackDinos <- modelsPredict1 |> pivot_longer(cols = c(CampbellMarcus1992, FieldEtal2013, CampioneEtal2014, RomeroAlarcon2023, Andersonetal1985), names_to = "Models", values_to = "predBM.g")
#| message: false
#| warning: false
#| echo: false
#|
modelsPPE <- modelsPredict.BackDinos |> group_by(Models) |> mutate(PPE = (abs(as.numeric(trueBM.g) - as.numeric(predBM.g))/as.numeric(predBM.g))/100)
meanPPE.th <- modelsPPE |> group_by(Models) |> summarize( MPPE = mean(PPE), sdPE = sd(PPE))
#| message: false
#| warning: false
#| echo: false
#| label: fig-cap-margin-plot7
#| fig-cap: "MPG vs horsepower, colored by transmission."
#| cap-location: margin
modelsTheropoda <- ggplot(data = modelsPredict.BackDinos) +
geom_smooth(aes(y = predBM.g, x = FemurCirc, color = Models)) +
geom_point(data = Dinos,aes(y = BM.g, x = FemurCirc, shape = Method))+
theme(axis.title = element_text(size = 10))+
labs(y = "VD-Body Mass (g)", x = "Femur Circumference")
RMSE.Theropoda <-ggplot(data = meanPPE.th, aes(x = Models, y = MPPE)) +
geom_line(aes(group= 1), color = "lightgreen")+
geom_point(aes(color = Models), size= 4)+
scale_x_discrete(guide = guide_axis(angle = 45))+
geom_segment(aes(x = 3, y = 0.1, xend = 3, yend = 0.01), color= "darkred",
arrow = arrow(length = unit(0.5, "cm")))+
theme(axis.title = element_text(size = 10))+
labs(y = "MPE", x = "Models")
ggarrange( modelsTheropoda,RMSE.Theropoda,
labels = c("A", "B"),
ncol = 1, nrow = 2)
#| message: false
#| warning: false
#| echo: false
#|
#Palaeognathae
palaeognathae <- newAves |> filter(Clade.1 == "Palaeognathae" & !is.na(BM.g) & !is.na(FemurCirc))
Andersonetal1985 <-   0.16 * palaeognathae$FemurCirc^2.37699
CampbellMarcus1992 <- 10^(-0.065 + 2.411*log10(palaeognathae$FemurCirc))
CampioneEtal2014 <- 10^(-0.683 + 2.754*log10(palaeognathae$FemurCirc))
FieldEtal2013 <- exp(-0.11 + 2.4*log(palaeognathae$FemurCirc))
RomeroAlarcon2023 <-  exp(-0.09121 + 2.37699*log(palaeognathae$FemurCirc))
modelsPredict1 <- as.data.frame(cbind(trueBM.g = palaeognathae$BM.g, FemurCirc = palaeognathae$FemurCirc, CampbellMarcus1992, FieldEtal2013, CampioneEtal2014, RomeroAlarcon2023,Andersonetal1985))
modelsPredict.backPalae <- modelsPredict1 |> pivot_longer(cols = c(CampbellMarcus1992, FieldEtal2013, CampioneEtal2014, RomeroAlarcon2023,Andersonetal1985), names_to = "Models", values_to = "predBM.g")
#| message: false
#| warning: false
#| echo: false
#|
modelsPE <- modelsPredict.backPalae  |> group_by(Models) |> mutate(PE = (abs(as.numeric(trueBM.g) - as.numeric(predBM.g))/as.numeric(predBM.g))/ 100)
meansPPE.Pa <- modelsPE |> group_by(Models) |> summarize( MPE = mean(PE), sdPPE = sd(PE))
#| message: false
#| warning: false
#| echo: false
#| label: fig-cap-margin-plot8
#| fig-cap: "MPG vs horsepower, colored by transmission."
#| cap-location: margin
modelsPala <- ggplot(data = modelsPredict.backPalae) +
geom_smooth(aes(y = predBM.g, x = FemurCirc, color = Models)) +
geom_point(data = palaeognathae,aes(y = BM.g, x = FemurCirc)) +
theme(axis.title = element_text(size = 10))+
labs(y = "VD-Body Mass (g)", x = "Femur Circumference")
RMSE.Pala <-ggplot(data = meansPPE.Pa, aes(x = Models, y = MPE)) +
geom_line(aes(group= 1), color = "lightgreen")+
geom_point(aes(color = Models), size= 4)+
scale_x_discrete(guide = guide_axis(angle = 45))+
geom_segment(aes(x = 5, y = 0.1, xend = 5, yend = 0.01), color= "darkred",
arrow = arrow(length = unit(0.5, "cm")))+
theme(axis.title = element_text(size = 10))+
labs(y = "MPE", x = "Models")
ggarrange( modelsPala,RMSE.Pala,
labels = c("A", "B"),
ncol = 1, nrow = 2)
