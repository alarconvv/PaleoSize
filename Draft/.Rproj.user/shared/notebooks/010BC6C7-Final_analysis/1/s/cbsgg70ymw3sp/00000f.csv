"0","#| message: false"
"0","#| warning: false"
"0","#| echo: false"
"0",""
"0",""
"0","###########"
"0","# Main Analysis BM ~ FC: Case 1: Split database in train and test subsets"
"0","###########"
"0",""
"0","sample.test <-sample(x = 1:nrow(newAves),size = ceiling(nrow(newAves)* 0.2))"
"0",""
"0","avesBMFC.test <- newAves[sample.test,]"
"0","avesBMFC.train <- newAves[-sample.test,]"
"0",""
"0","###########"
"0","# Fit models in training data"
"0","###########"
"0",""
"0","# Fit lineal model"
"0","lm_BM_c1 <- lm(BM.g ~ FemurCirc, data = avesBMFC.train)"
"0",""
"0","# Fit loglog model"
"0","loglog_BM_c1 <- lm(log(BM.g) ~ log(FemurCirc), data = avesBMFC.train)"
"0",""
"0","# Poly model "
"0","poly2_BM_c1 <- lm(BM.g ~ poly(FemurCirc,2), data = avesBMFC.train)"
"0",""
"0","# Poly 3model "
"0","poly3_BM_c1 <- lm(BM.g ~ poly(FemurCirc,3), data = avesBMFC.train)"
"0",""
"0","# Spline model 1 knots"
"0","library(splines)"
"0","Spline_BM1_c1 <- lm(BM.g ~bs(FemurCirc, knots = 50), data = avesBMFC.train)"
"0","ss.AIC1 <- ss(avesBMFC.train$FemurCirc, avesBMFC.train$BM.g, method = ""AIC"", nknots = 50)"
"0",""
"0","# Spline model 2 knots"
"0","Spline_BM2_c1 <- lm(BM.g ~ bs(FemurCirc, knots = c(25, 50)), data = avesBMFC.train)"
"0","ss.AIC2 <- ss(avesBMFC.train$FemurCirc, avesBMFC.train$BM.g, method = ""AIC"", nknots = c(25, 50))"
"0",""
"0","# Spline model 2 knots"
"0","Spline_BM3_c1 <- lm(BM.g ~ bs(FemurCirc, knots = c(25, 50, 100)), data = avesBMFC.train)"
"0","ss.AIC3 <- ss(avesBMFC.train$FemurCirc, avesBMFC.train$BM.g, method = ""AIC"", nknots = c(25, 50, 100))"
"0",""
"0",""
"0",""
"0","fitvals_BM.train_c1 <- data.frame(FemurCirc = avesBMFC.train$FemurCirc, "
"0","                         trueBM = avesBMFC.train$BM.g,"
"0","                         BM_FC = lm_BM_c1$fitted.values, "
"0","                         logBM_logFC = exp(loglog_BM_c1$fitted.values),"
"0","                         BM_poly2FC = poly2_BM_c1$fitted.values,"
"0","                         BM_poly3FC = poly3_BM_c1$fitted.values,"
"0","                         BM_spline1= Spline_BM1_c1$fitted.values,"
"0","                         BM_spline2= Spline_BM2_c1$fitted.values,"
"0","                         BM_spline3= Spline_BM3_c1$fitted.values)"
"0",""
"0",""
"0","fitvals_BM.long_c1 <- fitvals_BM.train_c1 %>% pivot_longer(-FemurCirc, names_to = 'model', values_to = 'BM.g')"
"0",""
"0",""
"0","###########"
"0","# RRMSE in training data: Case 1"
"0","###########"
"0",""
"0","n <- length(avesBMFC.train$BM.g)"
"0",""
"0",""
"0","lm_BM_MSE.trainc1 <- ( sum((avesBMFC.train$BM.g - lm_BM_c1$fitted.values)^2)/n)"
"0","loglog_BM_MSE.trainc1 <- ( sum((log(avesBMFC.train$BM.g) - loglog_BM_c1$fitted.values)^2)/n)"
"0","poly2_BM_MSE.trainc1 <- ( sum((avesBMFC.train$BM.g - poly2_BM_c1$fitted.values)^2)/n)"
"0","poly3_BM_MSE.trainc1 <- ( sum((avesBMFC.train$BM.g - poly3_BM_c1$fitted.values)^2)/n)"
"0","Spline_BM1_MSE.trainc1 <- ( sum((avesBMFC.train$BM.g - Spline_BM1_c1$fitted.values)^2)/n)"
"0","Spline_BM2_MSE.trainc1<- ( sum((avesBMFC.train$BM.g - Spline_BM2_c1$fitted.values)^2)/n)"
"0","Spline_BM2_MSE.trainc1<- ( sum((avesBMFC.train$BM.g - Spline_BM3_c1$fitted.values)^2)/n)"
"0",""
"0",""
"0","MSE_BM.train_c1 <- data.frame(type = 'train', "
"0","                         BM_FC = lm_BM_MSE.trainc1, "
"0","                         logBM_logFC = loglog_BM_MSE.trainc1,"
"0","                         BM_poly2FC = poly2_BM_MSE.trainc1,"
"0","                         BM_poly3FC = poly3_BM_MSE.trainc1,"
"0","                         BM_spline1= Spline_BM1_MSE.trainc1,"
"0","                         BM_spline2= Spline_BM2_MSE.trainc1,"
"0","                         BM_spline3= Spline_BM2_MSE.trainc1)"
"0",""
"0",""
"0","###########"
"0","# predicting  in test data"
"0","###########"
"0",""
"0","# Fit lineal model"
"0","lm_BM_c1.prd <- predict(lm_BM_c1, newdata = data.frame(FemurCirc = avesBMFC.test$FemurCirc))"
"0",""
"0","# Fit loglog model"
"0","loglog_BM_c1.prd <-predict(loglog_BM_c1, newdata = data.frame(FemurCirc = avesBMFC.test$FemurCirc))"
"0",""
"0","# Poly model "
"0","poly2_BM_c1.prd <- predict(poly2_BM_c1, newdata = data.frame(FemurCirc = avesBMFC.test$FemurCirc))"
"0",""
"0","# Poly 3model "
"0","poly3_BM_c1.prd <- predict(poly3_BM_c1, newdata = data.frame(FemurCirc = avesBMFC.test$FemurCirc))"
"0",""
"0","# Spline model 1 knots"
"0","library(splines)"
"0","Spline_BM1_c1.pred <- predict(Spline_BM1_c1, newdata = data.frame(FemurCirc = avesBMFC.test$FemurCirc))"
"0",""
"0","# Spline model 2 knots"
"0","Spline_BM2_c1.prd <- predict(Spline_BM2_c1, newdata = data.frame(FemurCirc = avesBMFC.test$FemurCirc))"
"0",""
"0","# Spline model 2 knots"
"0","Spline_BM3_c1.prd <- predict(Spline_BM3_c1, newdata = data.frame(FemurCirc = avesBMFC.test$FemurCirc))"
"0",""
"0",""
"0",""
"0",""
"0","###########"
"0","# RRMSE in predicting data set: Case 1"
"0","###########"
"0",""
"0","n <- length(avesBMFC.test$FemurCirc)"
"0",""
"0",""
"0","lm_BM_MSE.testc1 <- ( sum((avesBMFC.train$BM.g - lm_BM_c1.prd)^2)/n)"
"0","loglog_BM_MSE.testc1 <- ( sum((log(avesBMFC.train$BM.g) - loglog_BM_c1.prd)^2)/n)"
"0","poly2_BM_MSE.testc1 <- ( sum((avesBMFC.train$BM.g - poly2_BM_c1.prd)^2)/n)"
"0","poly3_BM_MSE.testc1 <- ( sum((avesBMFC.train$BM.g - poly3_BM_c1.prd)^2)/n)"
"0","Spline_BM1_MSE.testc1 <- ( sum((avesBMFC.train$BM.g - Spline_BM1_c1.pred)^2)/n)"
"0","Spline_BM2_MSE.testc1 <- ( sum((avesBMFC.train$BM.g - Spline_BM2_c1.prd)^2)/n)"
"0","Spline_BM3_MSE.testc1 <- ( sum((avesBMFC.train$BM.g - Spline_BM3_c1.prd)^2)/n)"
"0",""
"0",""
"0","MSE_BM.test_c1 <- data.frame(type = 'test', "
"0","                        BM_FC = lm_BM_MSE.testc1, "
"0","                         logBM_logFC = loglog_BM_MSE.testc1,"
"0","                         BM_poly2FC = poly2_BM_MSE.testc1,"
"0","                         BM_poly3FC = poly3_BM_MSE.testc1,"
"0","                         BM_spline1= Spline_BM1_MSE.testc1,"
"0","                         BM_spline2= Spline_BM2_MSE.testc1,"
"0","                         BM_spline3= Spline_BM3_MSE.testc1)"
"0",""
"0",""
"0","MSE_BM_c1 <- rbind(MSE_BM.train_c1, MSE_BM.test_c1)"
"0",""
"0","#MSE "
"0",""
"0","MSE.long_BM_c1 <- MSE_BM_c1 %>% pivot_longer(-type, names_to = 'model', values_to = 'MSE')"
"0",""
"0",""
"0","#################################################### Cross Validation ##############################################"
"0",""
"0","###########"
"0","# Preliminar Analysis: Case 2: Split Cross validation k fold"
"0","###########"
"0",""
"0","avesBMFC.cv <- newAves"
"0",""
"0","###########"
"0","# Fit models in training data"
"0","###########"
"0",""
"0",""
"0","train.control <- trainControl(method = ""repeatedcv"", "
"0","                              number = 10, repeats = 20)"
"0","# Fit lineal model"
"0","lm_BM_c2 <- train(BM.g ~ FemurCirc, data = avesBMFC.cv,method = ""lm"","
"0","               trControl = train.control)"
"0",""
"0","# Fit loglog model"
"0","loglog_BM_c2 <- train(log(BM.g) ~ log(FemurCirc), data = avesBMFC.cv,method = ""lm"","
"0","               trControl = train.control)"
"0",""
"0","# Poly model "
"0","poly2_BM_c2 <- train(BM.g ~ poly(FemurCirc,2), data = avesBMFC.cv,method = ""lm"","
"0","               trControl = train.control)"
"0",""
"0","# Poly 3model "
"0","poly3_BM_c2 <-  train(BM.g ~ poly(FemurCirc,3), data = avesBMFC.cv,method = ""lm"","
"0","               trControl = train.control)"
"0",""
"0","# Spline model 1 knots"
"0","Spline_BM1_c2 <-  train(BM.g ~bs(FemurCirc, knots = 50), data = avesBMFC.cv,method = ""lm"","
"0","               trControl = train.control)"
"0",""
"0","# Spline model 2 knots"
"0","Spline_BM2_c2 <- train(BM.g ~ bs(FemurCirc, knots = c(25, 50)), data = avesBMFC.cv,method = ""lm"","
"0","               trControl = train.control)"
"0",""
"0","# Spline model 2 knots"
"0","Spline_BM3_c2 <- train(BM.g ~ bs(FemurCirc, knots = c(25, 50, 100)), data = avesBMFC.cv,method = ""lm"","
"0","               trControl = train.control)"
"0",""
"0",""
"0",""
"0","fitvals_BM.cv_c2 <- data.frame(type = ""cv"","
"0","                         BM_FC = lm_BM_c2$results$RMSE, "
"0","                         logBM_logFC = loglog_BM_c2$results$RMSE,"
"0","                         BM_poly2FC = poly2_BM_c2$results$RMSE,"
"0","                         BM_poly3FC = poly3_BM_c2$results$RMSE,"
"0","                         BM_spline1= Spline_BM1_c2$results$RMSE,"
"0","                         BM_spline2= Spline_BM2_c2$results$RMSE,"
"0","                         BM_spline3= Spline_BM3_c2$results$RMSE)"
"0",""
"0",""
"0","fitvals_BM.long_c2 <- fitvals_BM.cv_c2 %>% pivot_longer(-type, names_to = 'model', values_to = 'RMSE')"
"0",""
"0",""
